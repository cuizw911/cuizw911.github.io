<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Clarity</title><link>https://cuizw911.github.io/</link><description>Recent content on Clarity</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2020, all rights reserved.</copyright><lastBuildDate>Sat, 08 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://cuizw911.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Go语言进制转换</title><link>https://cuizw911.github.io/post/go-base-conversion/</link><pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate><guid>https://cuizw911.github.io/post/go-base-conversion/</guid><description>&lt;p>进制也就是进位制，是人为定义的带进位的计数方法，在我们的日常生活中有很多进制的例子，如：&lt;/p>
&lt;ul>
&lt;li>一分钟是六十秒，逢六十进一，就是六十进制；&lt;/li>
&lt;li>一天是二十四小时，逢二十四进一，就是二十四进制；&lt;/li>
&lt;li>一周是七天，逢七进一，就是七进制；&lt;/li>
&lt;li>一年是十二个月，逢十二进一，就是十二进制;&lt;/li>
&lt;li>数学中逢十进一，就是十进制。&lt;/li>
&lt;/ul></description></item><item><title>Go语言常用文件操作汇总</title><link>https://cuizw911.github.io/post/go-handle-files/</link><pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate><guid>https://cuizw911.github.io/post/go-handle-files/</guid><description>&lt;h6 id="一切都是文件">一切都是文件&lt;/h6>
&lt;blockquote>
&lt;p>UNIX的基本方面之一是&lt;code>一切都是文件&lt;/code>。我们不一定知道文件描述符所映射的内容，这是由操作系统的设备驱动程序抽象的。操作系统以文件形式为我们提供了到设备的接口。&lt;br>
Go中的读取器和写入器接口是相似的抽象。我们只需读取和写入字节，而无需了解读取器从何处或如何获取数据或写入器在何处发送数据。
在/dev中查找可用的设备。 有些将需要提升的特权才能访问。&lt;/p>
&lt;/blockquote></description></item><item><title>About</title><link>https://cuizw911.github.io/about/</link><pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate><guid>https://cuizw911.github.io/about/</guid><description>Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:
https://github.</description></item><item><title>WSL中配置docker环境</title><link>https://cuizw911.github.io/docker/docker-wsl/</link><pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate><guid>https://cuizw911.github.io/docker/docker-wsl/</guid><description>&lt;p>由于在wsl中无法安装docker daemon，所以无法在wsl中直接使用docker服务。但是为了体验linux的开发环境，我们可以在wsl中安装docker客户端，并通过连接window系统中的docker daemon服务来使用docker。&lt;/p></description></item><item><title>Golang知识点总结</title><link>https://cuizw911.github.io/post/golang-note/</link><pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate><guid>https://cuizw911.github.io/post/golang-note/</guid><description>&lt;h4 id="1-值类型和引用类型">1. 值类型和引用类型&lt;/h4>
&lt;ul>
&lt;li>值类型：变量直接存储，内存通常在栈中分配。&lt;/li>
&lt;li>引用类型：变量存储的是一个地址，这个地址存储最终的值。内存通常在堆中分配。通过GC回收。&lt;/li>
&lt;/ul></description></item><item><title>Markdown Syntax Guide</title><link>https://cuizw911.github.io/post/markdown-syntax/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://cuizw911.github.io/post/markdown-syntax/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p></description></item><item><title>文章列表</title><link>https://cuizw911.github.io/archives/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://cuizw911.github.io/archives/</guid><description>2020 2020/08/10 WSL中配置docker环境 2020/06/20 Golang知识点总结</description></item></channel></rss>